
'''
문제 : 나이트가 수평으로 두칸 이동 뒤 수직으로 한칸 이동 or 수직으로 두칸 이동 뒤 수평으로 1칸 이동만 할 수 있는 경우 주어지는 위치에서 나이트가 이동할 수 있는 경우의 수
접근 : 8가지만 가능!! 8가지 경우를 튜플 형식으로 넣어두고 체스 판을 벗어나지 않는 경우에는 움직일 수 있는 것으로 칸운트 하기!! 
느낀점 : 책에서는 상하좌우랑 다르게 체스판 안에 있을 때로 조건을 걸엇고, 나는 상하좌우랑 똑같이 걸었다.. 사실 같은 코드인데 다르게 할 수 있구낭 
어디에서 어떤 코드가 좋은 거지?..? 스터디에서 물어봐야겠다.... 

'''

now = input()
R = int(now[1])
C = int(ord(now[0]))- int(ord('a')) +1 


#움직일 수 있는 8개 방향
moves = [(-2,-1), (-2,+1), (+2,-1), (+2,+1), (-1,-2), (-1,+2), (1,-2), (1,+2)]


result = 0 

for move in moves:
    #다음 위치
    next_R = R + move[0]
    next_C = C + move[1]
    if next_R <1 or next_R > 8 or next_C <1 or next_C > 8:
        continue
    result += 1
print(result)